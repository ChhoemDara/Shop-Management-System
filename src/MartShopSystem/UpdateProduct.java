/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package MartShopSystem;

import PanDate.PanDate;
import java.awt.Color;
import java.awt.GraphicsEnvironment;
import java.io.File;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author user
 */
public class UpdateProduct extends javax.swing.JFrame {

    /**
     * @return the xx
     */
    public int getXx() {
        return xx;
    }

    /**
     * @param xx the xx to set
     */
    public void setXx(int xx) {
        this.xx = xx;
    }

    /**
     * @return the xy
     */
    public int getXy() {
        return xy;
    }

    /**
     * @param xy the xy to set
     */
    public void setXy(int xy) {
        this.xy = xy;
    }

    /**
     * Creates new form UpdateProduct
     */
    public UpdateProduct() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Background = new javax.swing.JPanel();
        pnlToolBar = new javax.swing.JPanel();
        cmdMin = new javax.swing.JButton();
        cmdMax = new javax.swing.JButton();
        cmdExit = new javax.swing.JButton();
        barHome = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel45 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        lbBack = new javax.swing.JLabel();
        txtSearch = new subjtextfiledsk15.SubJTextField();
        jLabel46 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new subjtable.SubJTable();
        txtCategoryID = new subjtextfiledsk15.SubJTextField();
        jLabel2 = new javax.swing.JLabel();
        cboCategoryName = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        txtBarcode = new subjtextfiledsk15.SubJTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtProName = new subjtextfiledsk15.SubJTextField();
        jLabel6 = new javax.swing.JLabel();
        txtSupplierName = new subjtextfiledsk15.SubJTextField();
        txtQuality = new subjtextfiledsk15.SubJTextField();
        jLabel9 = new javax.swing.JLabel();
        txtUPriceIn = new subjtextfiledsk15.SubJTextField();
        jLabel10 = new javax.swing.JLabel();
        txtUPriceOut = new subjtextfiledsk15.SubJTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txtDate = new subjtextfiledsk15.SubJTextField();
        jLabel13 = new javax.swing.JLabel();
        lbImage = new javax.swing.JLabel();
        cmdDate = new javax.swing.JButton();
        cboStatus = new javax.swing.JComboBox<>();
        txtImagePro = new subjtextfiledsk15.SubJTextField();
        cmdBrows = new javax.swing.JButton();
        cmdSave = new javax.swing.JButton();
        cmdCommit = new javax.swing.JButton();
        cmdCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        Background.setBackground(new java.awt.Color(247, 247, 247));

        pnlToolBar.setBackground(new java.awt.Color(51, 51, 51));
        pnlToolBar.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                pnlToolBarMouseDragged(evt);
            }
        });
        pnlToolBar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                pnlToolBarMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                pnlToolBarMouseReleased(evt);
            }
        });

        cmdMin.setBackground(new java.awt.Color(51, 51, 51));
        cmdMin.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconSwingUI/Minimize.png"))); // NOI18N
        cmdMin.setContentAreaFilled(false);
        cmdMin.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cmdMin.setFocusable(false);
        cmdMin.setOpaque(true);
        cmdMin.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/iconSwingUI/Minimize (2).png"))); // NOI18N
        cmdMin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                cmdMinMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                cmdMinMouseExited(evt);
            }
        });
        cmdMin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdMinActionPerformed(evt);
            }
        });

        cmdMax.setBackground(new java.awt.Color(51, 51, 51));
        cmdMax.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconSwingUI/Maximize.png"))); // NOI18N
        cmdMax.setContentAreaFilled(false);
        cmdMax.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cmdMax.setFocusable(false);
        cmdMax.setOpaque(true);
        cmdMax.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/iconSwingUI/Maximize (2).png"))); // NOI18N
        cmdMax.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                cmdMaxMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                cmdMaxMouseExited(evt);
            }
        });
        cmdMax.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdMaxActionPerformed(evt);
            }
        });

        cmdExit.setBackground(new java.awt.Color(51, 51, 51));
        cmdExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconSwingUI/Exit.png"))); // NOI18N
        cmdExit.setContentAreaFilled(false);
        cmdExit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cmdExit.setFocusable(false);
        cmdExit.setOpaque(true);
        cmdExit.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/iconSwingUI/Exit (2).png"))); // NOI18N
        cmdExit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                cmdExitMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                cmdExitMouseExited(evt);
            }
        });
        cmdExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdExitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlToolBarLayout = new javax.swing.GroupLayout(pnlToolBar);
        pnlToolBar.setLayout(pnlToolBarLayout);
        pnlToolBarLayout.setHorizontalGroup(
            pnlToolBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlToolBarLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(cmdMin)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmdMax)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmdExit))
        );
        pnlToolBarLayout.setVerticalGroup(
            pnlToolBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(cmdExit, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
            .addComponent(cmdMax, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(cmdMin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        barHome.setBackground(new java.awt.Color(255, 255, 255));
        barHome.setPreferredSize(new java.awt.Dimension(5, 5));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(98, 83, 150));
        jLabel8.setText("Update Product/Fees");

        jLabel45.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel45.setForeground(new java.awt.Color(98, 83, 150));
        jLabel45.setText("Status");

        jPanel8.setBackground(new java.awt.Color(98, 83, 150));

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 110, Short.MAX_VALUE)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 30, Short.MAX_VALUE)
        );

        jPanel7.setBackground(new java.awt.Color(181, 77, 180));

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 30, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        lbBack.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lbBack.setForeground(new java.awt.Color(98, 83, 150));
        lbBack.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/icons8_Back_60px.png"))); // NOI18N
        lbBack.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lbBack.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lbBack.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbBackMouseClicked(evt);
            }
        });

        txtSearch.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(204, 204, 204)));
        txtSearch.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchKeyReleased(evt);
            }
        });

        jLabel46.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel46.setForeground(new java.awt.Color(98, 83, 150));
        jLabel46.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconbarCube/icons8-search-32.png"))); // NOI18N

        javax.swing.GroupLayout barHomeLayout = new javax.swing.GroupLayout(barHome);
        barHome.setLayout(barHomeLayout);
        barHomeLayout.setHorizontalGroup(
            barHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(barHomeLayout.createSequentialGroup()
                .addGroup(barHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(barHomeLayout.createSequentialGroup()
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, barHomeLayout.createSequentialGroup()
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(23, 23, 23)
                        .addComponent(lbBack, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(barHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel45))
                        .addGap(705, 705, 705)))
                .addComponent(jLabel46)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        barHomeLayout.setVerticalGroup(
            barHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(barHomeLayout.createSequentialGroup()
                .addGroup(barHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(barHomeLayout.createSequentialGroup()
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbBack, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(barHomeLayout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(barHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel8)
                            .addGroup(barHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel46)))
                        .addGap(11, 11, 11)
                        .addComponent(jLabel45)))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jScrollPane1.setBackground(new java.awt.Color(247, 247, 247));
        jScrollPane1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        table.setBackground(new java.awt.Color(247, 247, 247));
        table.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Category ID", "Barcode", "Pro Name", "SupplierName", "Quality", "UPriceIn", "UPriceOut", "Status", "Date", "Image"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, true, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table.setColorSelected(new java.awt.Color(232, 201, 232));
        table.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        table.setGridColor(new java.awt.Color(255, 255, 255));
        table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table);

        txtCategoryID.setBackground(new java.awt.Color(247, 247, 247));
        txtCategoryID.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(204, 204, 204)));
        txtCategoryID.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtCategoryID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCategoryIDKeyTyped(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel2.setText("Category Name");

        cboCategoryName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cboCategoryName.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "5", "10", "15" }));
        cboCategoryName.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel3.setText("Category ID");

        txtBarcode.setBackground(new java.awt.Color(247, 247, 247));
        txtBarcode.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(204, 204, 204)));
        txtBarcode.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtBarcode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtBarcodeKeyTyped(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel4.setText("Barcode");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel5.setText("Product Name");

        txtProName.setBackground(new java.awt.Color(247, 247, 247));
        txtProName.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(204, 204, 204)));
        txtProName.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtProName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtProNameKeyTyped(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel6.setText("Supplier Name");

        txtSupplierName.setBackground(new java.awt.Color(247, 247, 247));
        txtSupplierName.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(204, 204, 204)));
        txtSupplierName.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtSupplierName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtSupplierNameKeyTyped(evt);
            }
        });

        txtQuality.setBackground(new java.awt.Color(247, 247, 247));
        txtQuality.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(204, 204, 204)));
        txtQuality.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtQuality.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtQualityKeyTyped(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel9.setText("Quality");

        txtUPriceIn.setBackground(new java.awt.Color(247, 247, 247));
        txtUPriceIn.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(204, 204, 204)));
        txtUPriceIn.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtUPriceIn.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtUPriceInKeyTyped(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel10.setText("Unit PriceIn ");

        txtUPriceOut.setBackground(new java.awt.Color(247, 247, 247));
        txtUPriceOut.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(204, 204, 204)));
        txtUPriceOut.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtUPriceOut.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtUPriceOutKeyTyped(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel11.setText("Unit PriceOut");

        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel12.setText("Status");

        txtDate.setBackground(new java.awt.Color(247, 247, 247));
        txtDate.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(204, 204, 204)));
        txtDate.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jLabel13.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel13.setText("Date");

        lbImage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconbarCube/browser.png"))); // NOI18N
        lbImage.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        cmdDate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/icons8_Calendar_25px_1.png"))); // NOI18N
        cmdDate.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        cmdDate.setContentAreaFilled(false);
        cmdDate.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cmdDate.setOpaque(true);
        cmdDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdDateActionPerformed(evt);
            }
        });
        cmdDate.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cmdDateKeyTyped(evt);
            }
        });

        cboStatus.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cboStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Active", "Disable" }));
        cboStatus.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cboStatus.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cboStatusKeyTyped(evt);
            }
        });

        txtImagePro.setBackground(new java.awt.Color(247, 247, 247));
        txtImagePro.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(204, 204, 204)));
        txtImagePro.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        cmdBrows.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/icons8_More_25px.png"))); // NOI18N
        cmdBrows.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        cmdBrows.setContentAreaFilled(false);
        cmdBrows.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cmdBrows.setOpaque(true);
        cmdBrows.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdBrowsActionPerformed(evt);
            }
        });
        cmdBrows.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cmdBrowsKeyTyped(evt);
            }
        });

        cmdSave.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        cmdSave.setForeground(new java.awt.Color(181, 77, 180));
        cmdSave.setText("Save");
        cmdSave.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(181, 77, 180)));
        cmdSave.setContentAreaFilled(false);
        cmdSave.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cmdSave.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cmdSave.setOpaque(true);
        cmdSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdSaveActionPerformed(evt);
            }
        });

        cmdCommit.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        cmdCommit.setForeground(new java.awt.Color(181, 77, 180));
        cmdCommit.setText("Commit");
        cmdCommit.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(181, 77, 180)));
        cmdCommit.setContentAreaFilled(false);
        cmdCommit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cmdCommit.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cmdCommit.setOpaque(true);
        cmdCommit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdCommitActionPerformed(evt);
            }
        });

        cmdCancel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        cmdCancel.setForeground(new java.awt.Color(181, 77, 180));
        cmdCancel.setText("Cancel");
        cmdCancel.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(181, 77, 180)));
        cmdCancel.setContentAreaFilled(false);
        cmdCancel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cmdCancel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cmdCancel.setOpaque(true);
        cmdCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout BackgroundLayout = new javax.swing.GroupLayout(Background);
        Background.setLayout(BackgroundLayout);
        BackgroundLayout.setHorizontalGroup(
            BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlToolBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(barHome, javax.swing.GroupLayout.DEFAULT_SIZE, 1355, Short.MAX_VALUE)
            .addGroup(BackgroundLayout.createSequentialGroup()
                .addGroup(BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(BackgroundLayout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(BackgroundLayout.createSequentialGroup()
                                .addGroup(BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5))
                                .addGap(51, 51, 51)
                                .addGroup(BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cboCategoryName, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtCategoryID, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtBarcode, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtProName, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(92, 92, 92)
                                .addGroup(BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel10)
                                    .addComponent(jLabel11)
                                    .addComponent(jLabel12))
                                .addGroup(BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(BackgroundLayout.createSequentialGroup()
                                        .addGap(51, 51, 51)
                                        .addGroup(BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtQuality, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtUPriceIn, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtUPriceOut, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(BackgroundLayout.createSequentialGroup()
                                        .addGap(50, 50, 50)
                                        .addComponent(cboStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(BackgroundLayout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(56, 56, 56)
                                .addComponent(txtSupplierName, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(92, 92, 92)
                                .addComponent(jLabel13)
                                .addGap(117, 117, 117)
                                .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cmdDate, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(78, 78, 78)
                        .addGroup(BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(BackgroundLayout.createSequentialGroup()
                                .addComponent(txtImagePro, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cmdBrows, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(BackgroundLayout.createSequentialGroup()
                                .addComponent(lbImage, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, Short.MAX_VALUE)
                                .addGroup(BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(cmdSave, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cmdCommit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cmdCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(BackgroundLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1)))
                .addContainerGap())
        );
        BackgroundLayout.setVerticalGroup(
            BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BackgroundLayout.createSequentialGroup()
                .addComponent(pnlToolBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(barHome, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbImage, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(BackgroundLayout.createSequentialGroup()
                        .addGroup(BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(BackgroundLayout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(31, 31, 31)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(BackgroundLayout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(cboCategoryName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(txtCategoryID, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(txtBarcode, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(txtProName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(BackgroundLayout.createSequentialGroup()
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(31, 31, 31)
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addGroup(BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cboStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(BackgroundLayout.createSequentialGroup()
                                .addComponent(txtQuality, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(31, 31, 31)
                                .addComponent(txtUPriceIn, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(txtUPriceOut, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(BackgroundLayout.createSequentialGroup()
                                .addGap(75, 75, 75)
                                .addComponent(cmdSave, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cmdCommit, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cmdCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(20, 20, 20)))
                .addGroup(BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(BackgroundLayout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addGroup(BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtSupplierName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, BackgroundLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cmdDate, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtImagePro, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmdBrows, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(30, 30, 30)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 236, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Background, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Background, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setSize(new java.awt.Dimension(1355, 696));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    static boolean maximized=true;
    private int xx,xy;
    private void cmdMinMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmdMinMouseEntered
        try{
            cmdMin.setBackground(new Color(229,229,229));
        }catch(Exception e){
            JOptionPane.showConfirmDialog(this, e);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_cmdMinMouseEntered

    private void cmdMinMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmdMinMouseExited
        try{
            cmdMin.setBackground(new Color(51,51,51));
        }catch(Exception e){
            JOptionPane.showConfirmDialog(this, e);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_cmdMinMouseExited

    private void cmdMinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdMinActionPerformed
        try{
            this.setState(JFrame.ICONIFIED);
        }catch(Exception e){
            JOptionPane.showConfirmDialog(this, e);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_cmdMinActionPerformed

    private void cmdMaxMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmdMaxMouseEntered
        try{
            cmdMax.setBackground(new Color(229,229,229));
        }catch(Exception e){
            JOptionPane.showConfirmDialog(this, e);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_cmdMaxMouseEntered

    private void cmdMaxMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmdMaxMouseExited
        try{
            cmdMax.setBackground(new Color(51,51,51));
        }catch(Exception e){
            JOptionPane.showConfirmDialog(this, e);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_cmdMaxMouseExited

    private void cmdMaxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdMaxActionPerformed
        try{
            if(maximized){
                UpdateProduct.this.setExtendedState(JFrame.MAXIMIZED_BOTH);
                GraphicsEnvironment env=GraphicsEnvironment.getLocalGraphicsEnvironment();
                UpdateProduct.this.setMaximizedBounds(env.getMaximumWindowBounds());
                maximized=false;
            }else{
                setExtendedState(JFrame.NORMAL);
                maximized=true;
            }
        }catch(Exception e){
            JOptionPane.showConfirmDialog(this, e);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_cmdMaxActionPerformed

    private void cmdExitMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmdExitMouseEntered
        try{
            cmdExit.setBackground(new Color(232,17,35));
        }catch(Exception e){
            JOptionPane.showConfirmDialog(this, e);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_cmdExitMouseEntered

    private void cmdExitMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmdExitMouseExited
        try{
            cmdExit.setBackground(new Color(51,51,51));
        }catch(Exception e){
            JOptionPane.showConfirmDialog(this, e);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_cmdExitMouseExited

    private void cmdExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdExitActionPerformed
        try{
            System.exit(0);
        }catch(Exception e){
            JOptionPane.showConfirmDialog(this, e);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_cmdExitActionPerformed

    private void pnlToolBarMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlToolBarMouseDragged
        try{
            int x=evt.getXOnScreen();
            int y=evt.getYOnScreen();
            this.setLocation(x-getXx(), y-getXy());
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, e);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_pnlToolBarMouseDragged

    private void pnlToolBarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlToolBarMousePressed
        try{
            setOpacity((float)0.8);
            setXx(evt.getX());
            setXy(evt.getY());
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, e);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_pnlToolBarMousePressed

    private void pnlToolBarMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlToolBarMouseReleased
        try{
            setOpacity((float)1.0);
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, e);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_pnlToolBarMouseReleased

    private void lbBackMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbBackMouseClicked
        try{
            MainFrame.main(null);
            this.dispose();
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, e);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_lbBackMouseClicked

    private void txtCategoryIDKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCategoryIDKeyTyped
        try{
            if(evt.getKeyChar()==10){
                txtBarcode.grabFocus();
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, e);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCategoryIDKeyTyped

    private void txtBarcodeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBarcodeKeyTyped
        try{
            if(evt.getKeyChar()==10){
                txtProName.grabFocus();
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, e);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBarcodeKeyTyped

    private void txtProNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtProNameKeyTyped
        try{
            if(evt.getKeyChar()==10){
                txtSupplierName.grabFocus();
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, e);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_txtProNameKeyTyped

    private void txtSupplierNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSupplierNameKeyTyped
        try{
            if(evt.getKeyChar()==10){
                txtQuality.grabFocus();
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, e);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSupplierNameKeyTyped

    private void txtQualityKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtQualityKeyTyped
        try{
            if(evt.getKeyChar()==10){
                txtUPriceIn.grabFocus();
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, e);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_txtQualityKeyTyped

    private void txtUPriceInKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUPriceInKeyTyped
        try{
            if(evt.getKeyChar()==10){
                txtUPriceOut.grabFocus();
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, e);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUPriceInKeyTyped

    private void txtUPriceOutKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUPriceOutKeyTyped
        try{
            if(evt.getKeyChar()==10){
                cboStatus.grabFocus();
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, e);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUPriceOutKeyTyped

    private void cmdDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdDateActionPerformed
        try{
            PanDate pd=new PanDate(this, true);
            pd.setLocation(cmdSave);
            pd.setVisible(true);
            SimpleDateFormat sdf=new SimpleDateFormat("yyy-MM-dd hh:mm:ss");
            txtDate.setText(sdf.format(pd.getDate()));
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, e);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_cmdDateActionPerformed

    private void cmdDateKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cmdDateKeyTyped
        try{
            if(evt.getKeyChar()==10){
                cmdBrows.grabFocus();
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, e);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_cmdDateKeyTyped

    private void cboStatusKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cboStatusKeyTyped
        try{
            if(evt.getKeyChar()==10){
                cmdDate.grabFocus();
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, e);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_cboStatusKeyTyped

    private void cmdBrowsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdBrowsActionPerformed
        try{
            JFileChooser fc=new JFileChooser("ImageProducts");
            int click=fc.showOpenDialog(this);
            if(click==JFileChooser.APPROVE_OPTION){
                File f=fc.getSelectedFile();
                String path="ImageProducts/"+f.getName();
                txtImagePro.setText(path);
                ImageIcon icon=new ImageIcon(f.getAbsolutePath());
                lbImage.setIcon(icon);
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, e);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_cmdBrowsActionPerformed

    private void cmdBrowsKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cmdBrowsKeyTyped
        try{
            if(evt.getKeyChar()==10){
                cmdSave.grabFocus();
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, e);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_cmdBrowsKeyTyped

    private void cmdSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdSaveActionPerformed
        try{
           int i=table.getSelectedRow();
            if(i>=0){
                table.setValueAt(txtCategoryID.getText(), i, 1);
                table.setValueAt(txtBarcode.getText(), i, 2);
                table.setValueAt(txtProName.getText(), i, 3);
                table.setValueAt(txtQuality.getText(), i, 4);
                table.setValueAt(txtUPriceIn.getText(), i, 5);
                table.setValueAt(txtUPriceOut.getText(), i, 6);
                table.setValueAt(cboStatus.getSelectedItem(), i, 7);
                table.setValueAt(txtDate.getText(), i, 8);
                table.setValueAt(txtImagePro.getText(), i, 9);
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, e);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_cmdSaveActionPerformed

    private void cmdCommitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdCommitActionPerformed
        try{
            //String user=DataCon.getUserName();
            Statement s=DataCon.getDataCon().createStatement();
             for(int i=0;i<table.getRowCount();i++){
                String proID=""+table.getValueAt(i, 0);
                String cateID=""+table.getValueAt(i, 1);
                String barcode=""+table.getValueAt(i, 2);
                String proname=""+table.getValueAt(i, 3);
                String qty=""+table.getValueAt(i, 4);
                String upriceIn=""+table.getValueAt(i, 5);
                String upriceOut=""+table.getValueAt(i, 6);
                String status=""+table.getValueAt(1, 7);
                String cdate=""+table.getValueAt(i, 8);
                String image=""+table.getValueAt(i, 9);
                
                s.execute("update tblproduct set caID='"+cateID+"',barcode='"+barcode+"', proName='"+proname+"', qty='"+qty+"', upriceIn='"+upriceIn+"', upriceOut='"+upriceOut+"', status='"+status+"', createDate='"+cdate+"', proimage='"+image+"' where proID="+proID);
            }
            JOptionPane.showMessageDialog(this, "Updated!");
            s.close();
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, e);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_cmdCommitActionPerformed

    private void cmdCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdCancelActionPerformed
        try{
            lbImage.setIcon(null);
            MyInput.clearText(txtCategoryID,txtBarcode,txtProName,txtQuality,txtUPriceIn,txtUPriceOut,txtDate,txtImagePro);
            txtBarcode.grabFocus();
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, e);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_cmdCancelActionPerformed

    private void tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMouseClicked
        try{
            int sRI=table.getSelectedRow();
            txtCategoryID.setText(table.getValueAt(sRI, 1).toString());
            txtBarcode.setText(table.getValueAt(sRI, 2).toString());
            txtProName.setText(table.getValueAt(sRI, 3).toString());
            txtQuality.setText(table.getValueAt(sRI, 4).toString());
            txtUPriceIn.setText(table.getValueAt(sRI, 5).toString());
            txtUPriceOut.setText(table.getValueAt(sRI, 6).toString());
            //cboStatus.getSelectedItem(table.getValueAt(sRI, 7).toString());
            txtDate.setText(table.getValueAt(sRI, 8).toString());
            txtImagePro.setText(table.getValueAt(sRI, 9).toString());
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, e);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_tableMouseClicked
    
    private void callCateName()throws Exception{
        Statement s=DataCon.getDataCon().createStatement();
            ResultSet r=s.executeQuery("select caNameEng from tblcategory");
            if(r.first())
                do {                    
                    cboCategoryName.addItem(r.getString("caNameEng"));
                } while(r.next());
            r.close();
            s.close();
    }
    private void callTableValues()throws Exception{
        Statement s=DataCon.getDataCon().createStatement();
        ResultSet r=s.executeQuery("select proID,caID,barcode,proName,qty,upriceIn,upriceOut,status,createDate,proimage from tblproduct");
        while(r.next()){
            String proID=r.getString("proID");
            String caID=r.getString("caID");
            String barcode=r.getString("barcode");
            String proname=r.getString("proName");
            String qty=r.getString("qty");
            String upriceIn=r.getString("upriceIn");
            String upriceOut=r.getString("upriceOut");
            String status=r.getString("status");
            String cdate=r.getString("createDate");
            String image=r.getString("proimage");
            String st[]={proID,caID,barcode,proname,qty,upriceIn,upriceOut,status,cdate,image};
            table.addRow(st);
        }
        r.close();
        s.close();
    }
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        try{
            callCateName();
            callTableValues();
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, e);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowOpened

    private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyReleased
        try{
            Statement s=DataCon.getDataCon().createStatement();
            String search=txtSearch.getText();
            ResultSet r=s.executeQuery("select * from tblproduct where barcode like '"+search+"%' or proname like '"+search+"%'");
            if(r.first()){
                DefaultTableModel mod=(DefaultTableModel)table.getModel();
                TableRowSorter<DefaultTableModel> tr= new TableRowSorter<DefaultTableModel>(mod);
                table.setRowSorter(tr);
                tr.setRowFilter(RowFilter.regexFilter(search));
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, e);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSearchKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UpdateProduct.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UpdateProduct.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UpdateProduct.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UpdateProduct.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UpdateProduct().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Background;
    private javax.swing.JPanel barHome;
    private javax.swing.JComboBox<String> cboCategoryName;
    private javax.swing.JComboBox<String> cboStatus;
    private javax.swing.JButton cmdBrows;
    private javax.swing.JButton cmdCancel;
    private javax.swing.JButton cmdCommit;
    private javax.swing.JButton cmdDate;
    private javax.swing.JButton cmdExit;
    private javax.swing.JButton cmdMax;
    private javax.swing.JButton cmdMin;
    private javax.swing.JButton cmdSave;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbBack;
    private javax.swing.JLabel lbImage;
    private javax.swing.JPanel pnlToolBar;
    private subjtable.SubJTable table;
    private subjtextfiledsk15.SubJTextField txtBarcode;
    private subjtextfiledsk15.SubJTextField txtCategoryID;
    private subjtextfiledsk15.SubJTextField txtDate;
    private subjtextfiledsk15.SubJTextField txtImagePro;
    private subjtextfiledsk15.SubJTextField txtProName;
    private subjtextfiledsk15.SubJTextField txtQuality;
    private subjtextfiledsk15.SubJTextField txtSearch;
    private subjtextfiledsk15.SubJTextField txtSupplierName;
    private subjtextfiledsk15.SubJTextField txtUPriceIn;
    private subjtextfiledsk15.SubJTextField txtUPriceOut;
    // End of variables declaration//GEN-END:variables
}
