/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package MartShopSystem;

import java.awt.Color;
import java.awt.GraphicsEnvironment;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Date;
import java.util.HashMap;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author user
 */
public class SaleFrame extends javax.swing.JFrame {

    /**
     * Creates new form SaleFrame
     */
    public SaleFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Background = new javax.swing.JPanel();
        pnlToolBar = new javax.swing.JPanel();
        cmdMin = new javax.swing.JButton();
        cmdMax = new javax.swing.JButton();
        cmdExit = new javax.swing.JButton();
        imageSC = new javax.swing.JScrollPane();
        imageTable = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new subjtable.SubJTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        pnlCoca = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtBarcode = new subjtextfiledsk15.SubJTextField();
        jSeparator1 = new javax.swing.JSeparator();
        subJTextField2 = new subjtextfiledsk15.SubJTextField();
        jLabel2 = new javax.swing.JLabel();
        cmdRemove = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        cmdConfirm = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        Background.setBackground(new java.awt.Color(247, 247, 247));

        pnlToolBar.setBackground(new java.awt.Color(51, 51, 51));
        pnlToolBar.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                pnlToolBarMouseDragged(evt);
            }
        });
        pnlToolBar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                pnlToolBarMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                pnlToolBarMouseReleased(evt);
            }
        });

        cmdMin.setBackground(new java.awt.Color(51, 51, 51));
        cmdMin.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconSwingUI/Minimize.png"))); // NOI18N
        cmdMin.setContentAreaFilled(false);
        cmdMin.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cmdMin.setFocusable(false);
        cmdMin.setOpaque(true);
        cmdMin.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/iconSwingUI/Minimize (2).png"))); // NOI18N
        cmdMin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                cmdMinMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                cmdMinMouseExited(evt);
            }
        });
        cmdMin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdMinActionPerformed(evt);
            }
        });

        cmdMax.setBackground(new java.awt.Color(51, 51, 51));
        cmdMax.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconSwingUI/Maximize.png"))); // NOI18N
        cmdMax.setContentAreaFilled(false);
        cmdMax.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cmdMax.setFocusable(false);
        cmdMax.setOpaque(true);
        cmdMax.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/iconSwingUI/Maximize (2).png"))); // NOI18N
        cmdMax.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                cmdMaxMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                cmdMaxMouseExited(evt);
            }
        });
        cmdMax.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdMaxActionPerformed(evt);
            }
        });

        cmdExit.setBackground(new java.awt.Color(51, 51, 51));
        cmdExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconSwingUI/Exit.png"))); // NOI18N
        cmdExit.setContentAreaFilled(false);
        cmdExit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cmdExit.setFocusable(false);
        cmdExit.setOpaque(true);
        cmdExit.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/iconSwingUI/Exit (2).png"))); // NOI18N
        cmdExit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                cmdExitMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                cmdExitMouseExited(evt);
            }
        });
        cmdExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdExitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlToolBarLayout = new javax.swing.GroupLayout(pnlToolBar);
        pnlToolBar.setLayout(pnlToolBarLayout);
        pnlToolBarLayout.setHorizontalGroup(
            pnlToolBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlToolBarLayout.createSequentialGroup()
                .addGap(0, 1199, Short.MAX_VALUE)
                .addComponent(cmdMin)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmdMax)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmdExit))
        );
        pnlToolBarLayout.setVerticalGroup(
            pnlToolBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(cmdExit, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
            .addComponent(cmdMax, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(cmdMin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        imageSC.setBackground(new java.awt.Color(247, 247, 247));
        imageSC.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        imageSC.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        imageTable.setBackground(new java.awt.Color(247, 247, 247));
        imageTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        imageTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        imageTable.setSelectionForeground(new java.awt.Color(247, 247, 247));
        imageSC.setViewportView(imageTable);
        imageTable.setTableHeader(null);

        jScrollPane1.setBackground(new java.awt.Color(247, 247, 247));
        jScrollPane1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        table.setBackground(new java.awt.Color(247, 247, 247));
        table.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product Name", "Unit Price", "Quality", "Cost"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table.setGridColor(new java.awt.Color(255, 255, 255));
        jScrollPane1.setViewportView(table);

        jScrollPane2.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        jTabbedPane1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        jPanel1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        pnlCoca.setBackground(new java.awt.Color(250, 250, 250));
        pnlCoca.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnlCocaMouseClicked(evt);
            }
        });

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ImageButton/Cocacolax.png"))); // NOI18N

        jLabel5.setText("Coca Cola");

        javax.swing.GroupLayout pnlCocaLayout = new javax.swing.GroupLayout(pnlCoca);
        pnlCoca.setLayout(pnlCocaLayout);
        pnlCocaLayout.setHorizontalGroup(
            pnlCocaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel4)
            .addGroup(pnlCocaLayout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(jLabel5))
        );
        pnlCocaLayout.setVerticalGroup(
            pnlCocaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCocaLayout.createSequentialGroup()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addContainerGap())
        );

        jPanel4.setBackground(new java.awt.Color(250, 250, 250));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 128, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 146, Short.MAX_VALUE)
        );

        jPanel6.setBackground(new java.awt.Color(250, 250, 250));

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 128, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 146, Short.MAX_VALUE)
        );

        jPanel7.setBackground(new java.awt.Color(250, 250, 250));

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 146, Short.MAX_VALUE)
        );

        jPanel8.setBackground(new java.awt.Color(250, 250, 250));

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 128, Short.MAX_VALUE)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 146, Short.MAX_VALUE)
        );

        jPanel9.setBackground(new java.awt.Color(250, 250, 250));

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 128, Short.MAX_VALUE)
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 146, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pnlCoca, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(45, 45, 45)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(46, 46, 46)
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(641, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pnlCoca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("SoftDrink", jPanel1);

        jPanel2.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1143, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 359, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Beer", jPanel2);

        jScrollPane2.setViewportView(jTabbedPane1);

        jPanel5.setBackground(new java.awt.Color(250, 250, 250));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel1.setText("Input Barcode");

        txtBarcode.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(204, 204, 204)));
        txtBarcode.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtBarcode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtBarcodeKeyTyped(evt);
            }
        });

        subJTextField2.setBackground(new java.awt.Color(250, 250, 250));
        subJTextField2.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(204, 204, 204)));
        subJTextField2.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel2.setText("Sub Total");

        cmdRemove.setBackground(new java.awt.Color(11, 181, 217));
        cmdRemove.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        cmdRemove.setForeground(new java.awt.Color(255, 255, 255));
        cmdRemove.setText("Remove");
        cmdRemove.setContentAreaFilled(false);
        cmdRemove.setOpaque(true);
        cmdRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdRemoveActionPerformed(evt);
            }
        });

        jComboBox1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "5", "10", "15" }));
        jComboBox1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel3.setText("Discount on Drink made");

        cmdConfirm.setBackground(new java.awt.Color(11, 181, 217));
        cmdConfirm.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        cmdConfirm.setForeground(new java.awt.Color(255, 255, 255));
        cmdConfirm.setText("Confirm");
        cmdConfirm.setContentAreaFilled(false);
        cmdConfirm.setOpaque(true);
        cmdConfirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdConfirmActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(11, 11, 11)
                        .addComponent(subJTextField2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtBarcode, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(cmdConfirm, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(cmdRemove, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(87, 87, 87))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1)
                .addGap(33, 33, 33)
                .addComponent(txtBarcode, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(99, 99, 99)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(56, 56, 56)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(subJTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(59, 59, 59)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmdRemove, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmdConfirm, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(156, 156, 156))
        );

        javax.swing.GroupLayout BackgroundLayout = new javax.swing.GroupLayout(Background);
        Background.setLayout(BackgroundLayout);
        BackgroundLayout.setHorizontalGroup(
            BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlToolBar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(BackgroundLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1039, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1039, Short.MAX_VALUE)
                    .addComponent(imageSC))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        BackgroundLayout.setVerticalGroup(
            BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BackgroundLayout.createSequentialGroup()
                .addComponent(pnlToolBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(BackgroundLayout.createSequentialGroup()
                        .addComponent(imageSC, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 211, Short.MAX_VALUE))
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Background, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Background, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setSize(new java.awt.Dimension(1358, 691));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    static boolean maximized=true;
    private int xx,xy;
    private DefaultTableModel modImage=new DefaultTableModel(){
       public Class getColumnClass(int column){
           return ImageIcon.class;
       }
    };
    
    private void order(String proName)throws Exception{
       DefaultTableModel mod=(DefaultTableModel)table.getModel();
       if(table.getRowCount()>0)
           for(int i=0;i<table.getRowCount();i++){
               String pname=""+table.getValueAt(i, 0);
               if(pname.equalsIgnoreCase(proName)){
                   double price=Double.valueOf(""+table.getValueAt(i, 1));
                   long qty=Long.valueOf(""+table.getValueAt(i, 2));
                   qty++;
                   double amount=qty*price;
                   table.setValueAt(""+qty, i, 2);
                   table.setValueAt(""+amount, i, 3);
                   modOrder.setValueAt(""+qty, i, 3);
                   return;
               }
           }
       Statement s=DataCon.getDataCon().createStatement();
       ResultSet r=s.executeQuery("select proid,upricein,upriceout,proimage from tblproduct where proname='"+proName+"'");
       if(r.first()){
           String price=r.getString("upriceout");
           String st[]={proName,price,"1",price};
           String pid=r.getString("proid");
           String pricein=r.getString("upricein");
           String stOrder[]={pid,pricein,price,"1","tblorderdetail"};
           
           modOrder.addRow(stOrder);
           mod.addRow(st);
           //this set to image
           String path=r.getString("proimage");
           ImageIcon icon=new ImageIcon(path);
           int index=imageTable.getColumnCount();
           modImage.addColumn("pic");
            imageTable.setValueAt(icon, 0, index);
            for(int i=0;i<modImage.getColumnCount();i++){
                imageTable.getColumnModel().getColumn(i).setPreferredWidth(234);
            }
            //set to Auto sroll to last selected
            this.pack();
            int max=imageSC.getHorizontalScrollBar().getMaximum();
            imageSC.getHorizontalScrollBar().setValue(max);
        }
        r.close();
        s.close();
    }
    
    private void cutStock(double dis)throws Exception{
        Date ordD=new Date(); 
        SimpleDateFormat sdf=new SimpleDateFormat("yyyy-MM-dd hh:mm:ss");
        String ordDate=sdf.format(ordD);
        String user=DataCon.getUserName();
        Statement s=DataCon.getDataCon().createStatement();
        s.execute("insert into tblorder(orderdate,discount,user) values ('"+ordDate+"',"+dis+",'"+user+"')");
        ResultSet r=s.executeQuery("select orderid from tblorder where orderdate='"+ordDate+"' and discount="+dis+" and user='"+user+"'");
        r.first();
        String orderID=r.getString("orderid");
        this.orderID=orderID;// set to report
        this.discount=""+dis;
        this.orderDate=ordDate;
        r.close();
        for(int i=0;i<modOrder.getRowCount();i++){
            String proid=""+modOrder.getValueAt(i, 0);
            String pricein=""+modOrder.getValueAt(i, 1);
            String priceout=""+modOrder.getValueAt(i, 2);
            String qty=""+modOrder.getValueAt(i, 3);
            String sql="insert into tblorderdetail values ("+orderID+","+proid+","+pricein+","+priceout+","+qty+")";
            s.execute(sql);
            ResultSet rOrder=s.executeQuery("select qty from tblproduct where proid="+proid);
            rOrder.first();
            long qtyNew=rOrder.getLong("qty");
            qtyNew -=Long.valueOf(qty);
            rOrder.close();
            s.execute("update tblproduct set qty="+qtyNew+" where proid="+proid);
        }
        s.close();
    }
    private Collection data(){
        ArrayList<DataCollections> arr=new ArrayList<>();
        for(int i=0;i<table.getRowCount();i++){
            String proname=""+table.getValueAt(i, 0);
            String price=""+table.getValueAt(i, 1);
            DecimalFormat df=new DecimalFormat("$0.00");
            price=df.format(Double.valueOf(price));
            String qty=""+table.getValueAt(i, 2);
            String amount=""+table.getValueAt(i, 3);
            amount=df.format(Double.valueOf(amount));
            DataCollections obj=new DataCollections(proname, price, qty, amount);
            arr.add(obj);
        }
        return arr;
    }
    private String orderID,discount,orderDate;
    private void printReport(double subTotal,double cashReceived,double cashReturned)throws Exception{
        JasperReport jp=JasperCompileManager.compileReport("Report/OrderReceipt.jrxml");
        HashMap para=new HashMap(); //add parameter 
        para.put("cashier",DataCon.getUserName());
        DecimalFormat df=new DecimalFormat("000000");
        para.put("orderid", df.format(Long.valueOf(orderID)));
        para.put("date", orderDate);
        para.put("discount", discount+"%");
        DecimalFormat dfs=new DecimalFormat("$0.00");
        para.put("subtotal", dfs.format(subTotal));
        double disPrice=subTotal* Double.valueOf(discount)/100;
        double grandTotal=subTotal-disPrice;
        para.put("disprice", dfs.format(disPrice));
        para.put("grandtotal", dfs.format(grandTotal));
        para.put("received", dfs.format(cashReceived));
        para.put("returned", dfs.format(cashReturned));
        JRBeanCollectionDataSource jcd=new JRBeanCollectionDataSource(data());//add Field
        JasperPrint print=JasperFillManager.fillReport(jp, para,jcd);
        JasperViewer.viewReport(print, false);
        //JasperPrintManager.printReport(print, true); //false is setting printing default
    }
    
    private void cmdMinMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmdMinMouseEntered
        try{
            cmdMin.setBackground(new Color(229,229,229));
        }catch(Exception e){
            JOptionPane.showConfirmDialog(this, e);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_cmdMinMouseEntered

    private void cmdMinMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmdMinMouseExited
        try{
            cmdMin.setBackground(new Color(51,51,51));
        }catch(Exception e){
            JOptionPane.showConfirmDialog(this, e);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_cmdMinMouseExited

    private void cmdMinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdMinActionPerformed
        try{
            this.setState(JFrame.ICONIFIED);
        }catch(Exception e){
            JOptionPane.showConfirmDialog(this, e);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_cmdMinActionPerformed

    private void cmdMaxMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmdMaxMouseEntered
        try{
            cmdMax.setBackground(new Color(229,229,229));
        }catch(Exception e){
            JOptionPane.showConfirmDialog(this, e);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_cmdMaxMouseEntered

    private void cmdMaxMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmdMaxMouseExited
        try{
            cmdMax.setBackground(new Color(51,51,51));
        }catch(Exception e){
            JOptionPane.showConfirmDialog(this, e);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_cmdMaxMouseExited

    private void cmdMaxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdMaxActionPerformed
        try{
            if(maximized){
                SaleFrame.this.setExtendedState(JFrame.MAXIMIZED_BOTH);
                GraphicsEnvironment env=GraphicsEnvironment.getLocalGraphicsEnvironment();
                SaleFrame.this.setMaximizedBounds(env.getMaximumWindowBounds());
                maximized=false;
            }else{
                setExtendedState(JFrame.NORMAL);
                maximized=true;
            }
        }catch(Exception e){
            JOptionPane.showConfirmDialog(this, e);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_cmdMaxActionPerformed

    private void cmdExitMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmdExitMouseEntered
        try{
            cmdExit.setBackground(new Color(232,17,35));
        }catch(Exception e){
            JOptionPane.showConfirmDialog(this, e);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_cmdExitMouseEntered

    private void cmdExitMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmdExitMouseExited
        try{
            cmdExit.setBackground(new Color(51,51,51));
        }catch(Exception e){
            JOptionPane.showConfirmDialog(this, e);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_cmdExitMouseExited

    private void cmdExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdExitActionPerformed
        try{
            System.exit(0);
        }catch(Exception e){
            JOptionPane.showConfirmDialog(this, e);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_cmdExitActionPerformed

    private void pnlToolBarMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlToolBarMouseDragged
        try{
            int x=evt.getXOnScreen();
            int y=evt.getYOnScreen();
            this.setLocation(x-xx, y-xy);
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, e);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_pnlToolBarMouseDragged

    private void pnlToolBarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlToolBarMousePressed
        try{
            setOpacity((float)0.8);
            xx=evt.getX();
            xy=evt.getY();
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, e);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_pnlToolBarMousePressed

    private void pnlToolBarMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlToolBarMouseReleased
        try{
            setOpacity((float)1.0);
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, e);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_pnlToolBarMouseReleased
    private DefaultTableModel modOrder=new DefaultTableModel();
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        try{
        modOrder.addColumn("proid");
        modOrder.addColumn("pricein");
        modOrder.addColumn("priceout");
        modOrder.addColumn("qty");
        imageTable.setModel(modImage);//Image
        imageTable.setRowHeight(201);
        modImage.setRowCount(1);
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, e);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowOpened

    private void cmdConfirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdConfirmActionPerformed
        try{
        double subTotal=0;
        DefaultTableModel mod=(DefaultTableModel)table.getModel();
        for(int i=0;i<mod.getRowCount();i++){
            subTotal+=Double.valueOf(""+mod.getValueAt(i, 3));
        }
        TotalFrame total=new TotalFrame(this, true);
        total.setSubTotal(subTotal);
        total.setVisible(true);
        if(total.getClick()==1){
            cutStock(total.getDiscount());//cutStock
            printReport(subTotal,total.getCashReceived(),total.getCashReturned());//print invoice
            while(mod.getRowCount()>0) //clear table showed
                mod.removeRow(0);
            while(modOrder.getRowCount()>0)// clear hide table
                modOrder.removeRow(0);
            modImage.setColumnCount(0);
        }
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, e);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_cmdConfirmActionPerformed

    private void txtBarcodeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBarcodeKeyTyped
        if(evt.getKeyChar()==10){
            try{
                String barcode=txtBarcode.getText().trim();
                Statement s=DataCon.getDataCon().createStatement();
                ResultSet r=s.executeQuery("select proname from tblproduct where barcode='"+barcode+"'");
                if(r.first()){
                    order(r.getString("proname"));
                }else{
                        JOptionPane.showMessageDialog(this, "This Product is not in Stock");
                    }
                txtBarcode.setText("");
                r.close();
                s.close();
            }catch(Exception e){
                JOptionPane.showMessageDialog(this, e);
            }
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBarcodeKeyTyped

    private void cmdRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdRemoveActionPerformed
        if(!table.getSelectionModel().isSelectionEmpty()){
            int click=JOptionPane.showConfirmDialog(this, "Are you sure?","Confirm",JOptionPane.YES_NO_OPTION);
            if(click==JOptionPane.YES_OPTION)
            try{
                int index[]=table.getSelectedRows();
                Statement s=DataCon.getDataCon().createStatement();
                for(int i=0;i<index.length;i++){
                    //String proid=""+modOrder.getValueAt(index[i], 0);
                    //s.execute("delete from tblorderdetail where proid="+proid);
                    //s.execute("delete from tblorder where ");
                    cutStock(i);
                }
                s.close();
                DefaultTableModel mod=(DefaultTableModel)table.getModel();
                for(int i=0;i<index.length;i++)
                mod.removeRow(index[i]-i);
                
            }catch(Exception e){
                JOptionPane.showMessageDialog(this, e);
            }
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_cmdRemoveActionPerformed

    private void pnlCocaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlCocaMouseClicked
        try{
            order("Coca");
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, e);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_pnlCocaMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SaleFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SaleFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SaleFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SaleFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SaleFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Background;
    private javax.swing.JButton cmdConfirm;
    private javax.swing.JButton cmdExit;
    private javax.swing.JButton cmdMax;
    private javax.swing.JButton cmdMin;
    private javax.swing.JButton cmdRemove;
    private javax.swing.JScrollPane imageSC;
    private javax.swing.JTable imageTable;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JPanel pnlCoca;
    private javax.swing.JPanel pnlToolBar;
    private subjtextfiledsk15.SubJTextField subJTextField2;
    private subjtable.SubJTable table;
    private subjtextfiledsk15.SubJTextField txtBarcode;
    // End of variables declaration//GEN-END:variables
}
